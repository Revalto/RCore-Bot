import VK from '../vk';
export interface ICallbackServiceValidate {
    resolve: () => Promise<void>;
    reject: (error: Error) => Promise<void>;
}
export default class CallbackService {
    captchaHandler: Function | null;
    twoFactorHandler: Function | null;
    protected vk: VK;
    /**
     * Constructor
     */
    constructor(vk: VK);
    /**
     * Checks if there is a captcha handler
     */
    get hasCaptchaHandler(): boolean;
    /**
     * Checks if there is a two-factor handler
     */
    get hasTwoFactorHandler(): boolean;
    /**
     * Processing captcha
     */
    processingCaptcha(payload: object): Promise<{
        key: string;
        validate: ICallbackServiceValidate;
    }>;
    /**
     * Processing two-factor
     */
    processingTwoFactor(payload: object): Promise<{
        code: string;
        validate: ICallbackServiceValidate;
    }>;
}
