import Context, { IContextOptions } from './context';
import { inspectCustomData } from '../../utils/constants';
export interface IRemovedMessagesContextPayload {
    id: number;
    peer_id: number;
}
export declare type RemovedMessagesContextOptions<S> = Omit<IContextOptions<number[], S>, 'type' | 'subTypes'>;
export default class RemovedMessagesContext<S = Record<string, any>> extends Context<IRemovedMessagesContextPayload, S> {
    constructor(options: RemovedMessagesContextOptions<S>);
    /**
     * Checks that messages have been deleted
     */
    get isRemoved(): boolean;
    /**
     * Checks that messages have been restored
     */
    get isRecovery(): boolean;
    /**
     * Returns the identifier of the message
     */
    get id(): number;
    /**
     * Returns the peer ID
     */
    get peerId(): number;
    /**
     * Returns the custom data
     */
    [inspectCustomData](): object;
}
