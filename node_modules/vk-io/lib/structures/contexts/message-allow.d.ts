import Context, { IContextOptions } from './context';
import { inspectCustomData } from '../../utils/constants';
export interface IMessageAllowContextPayload {
    user_id: number;
    key: string;
}
export declare type MessageAllowContextOptions<S> = Omit<IContextOptions<IMessageAllowContextPayload, S>, 'type' | 'subTypes'>;
export default class MessageAllowContext<S = Record<string, any>> extends Context<IMessageAllowContextPayload, S> {
    constructor(options: MessageAllowContextOptions<S>);
    /**
     * Checks that the user has subscribed to messages
     */
    get isSubscribed(): boolean;
    /**
     * Checks that the user has unsubscribed from the messages
     */
    get isUbsubscribed(): boolean;
    /**
     * Returns the identifier user
     */
    get userId(): number;
    /**
     * Returns the key
     */
    get key(): string | null;
    /**
     * Returns the custom data
     */
    [inspectCustomData](): object;
}
