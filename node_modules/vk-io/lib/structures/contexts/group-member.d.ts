import Context, { IContextOptions } from './context';
import { inspectCustomData } from '../../utils/constants';
export interface IGroupMemberContextPayload {
    user_id: number;
    self?: number;
    join_type?: string;
}
export declare type GroupMemberContextOptions<S> = Omit<IContextOptions<IGroupMemberContextPayload, S>, 'type' | 'subTypes'>;
export default class GroupMemberContext<S = Record<string, any>> extends Context<IGroupMemberContextPayload, S> {
    constructor(options: GroupMemberContextOptions<S>);
    /**
     * Checks is join user
     */
    get isJoin(): boolean;
    /**
     * Checks is leave user
     */
    get isLeave(): boolean;
    /**
     * Checks is self leave user
     */
    get isSelfLeave(): boolean | null;
    /**
     * Returns the identifier user
     */
    get userId(): number;
    /**
     * Returns the join type
     */
    get joinType(): string | null;
    /**
     * Returns the custom data
     */
    [inspectCustomData](): object;
}
