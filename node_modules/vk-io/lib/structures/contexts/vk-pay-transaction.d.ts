import Context, { IContextOptions } from './context';
import { inspectCustomData } from '../../utils/constants';
export interface IVKPayTransactionPayload {
    from_id: number;
    amount: number;
    description: string;
    date: number;
}
export declare type VKPayTransactionContextOptions<S> = Omit<IContextOptions<IVKPayTransactionPayload, S>, 'type' | 'subTypes'>;
export default class VKPayTransactionContext<S = Record<string, any>> extends Context<IVKPayTransactionPayload, S> {
    constructor(options: VKPayTransactionContextOptions<S>);
    /**
     * Returns the identifier transfer sender
     */
    get fromId(): number;
    /**
     * Returns the transfer amount in thousandths of a ruble
     */
    get amount(): number;
    /**
     * Returns the description on the translation
     */
    get description(): string;
    /**
     * Returns the unixtime transfer time
     */
    get createdAt(): number;
    /**
     * Returns the custom data
     */
    [inspectCustomData](): object;
}
