/// <reference types="node" />
import { inspect } from 'util';
import VK from '../../vk';
import { inspectCustomData } from '../../utils/constants';
export default class ExternalAttachment<P = {}> {
    type: string;
    protected $filled: boolean;
    protected vk: VK;
    protected payload: P;
    /**
     * Constructor
     */
    constructor(type: string, payload: P);
    /**
     * Returns custom tag
     */
    get [Symbol.toStringTag](): string;
    /**
     * Returns whether the attachment is filled
     */
    get isFilled(): boolean;
    /**
     * Can be attached via string representation
     */
    get canBeAttached(): boolean;
    /**
     * Returns data for JSON
     */
    toJSON(): object;
    /**
     * Returns the custom data
     */
    [inspectCustomData](): object;
    /**
     * Custom inspect object
     */
    [inspect.custom](depth: number, options: Record<string, any>): string;
}
