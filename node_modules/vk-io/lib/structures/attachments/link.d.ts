import VK from '../../vk';
import ExternalAttachment from './external';
import PhotoAttachment, { IPhotoAttachmentPayload } from './photo';
import { inspectCustomData } from '../../utils/constants';
declare const kPhoto: unique symbol;
export interface ILinkAttachmentPayload {
    title: string;
    caption: string | null;
    description: string | null;
    url: string;
    product: {
        price: object;
    } | null;
    button: {
        title: string;
        action: {
            type: string;
            url: string;
        };
    } | null;
    photo: IPhotoAttachmentPayload | null;
}
export default class LinkAttachment extends ExternalAttachment<ILinkAttachmentPayload> {
    protected [kPhoto]: PhotoAttachment | null;
    /**
     * Constructor
     */
    constructor(payload: ILinkAttachmentPayload, vk?: VK);
    /**
     * Checks for the presence of a photo in a link
     */
    get hasPhoto(): boolean;
    /**
     * Returns the title
     */
    get title(): string;
    /**
     * Returns the title
     */
    get caption(): string | null;
    /**
     * Returns the description
     */
    get description(): string | null;
    /**
     * Returns the URL of the link
     */
    get url(): string;
    /**
     * Returns the product
     */
    get product(): {
        price: object;
    } | null;
    /**
     * Returns the button
     */
    get button(): {
        title: string;
        action: {
            type: string;
            url: string;
        };
    } | null;
    /**
     * Returns the photo
     */
    get photo(): PhotoAttachment | null;
    /**
     * Returns the custom data
     */
    [inspectCustomData](): object;
}
export {};
