/// <reference types="node" />
import { inspect } from 'util';
import VK from '../vk';
import APIRequest from '../api/request';
export default class Chain {
    started: boolean;
    protected vk: VK;
    protected queue: APIRequest[];
    /**
     * Constructor
     */
    constructor(vk: VK);
    /**
     * Returns custom tag
     */
    get [Symbol.toStringTag](): string;
    /**
     * Adds method to queue
     */
    append(method: string, params: object): Promise<any>;
    /**
     * Promise based
     */
    then(thenFn: Function, catchFn: Function): Promise<any[]>;
    /**
     * Starts the chain
     */
    run(): Promise<{
        response: any[];
        errors: any[];
    }>;
    /**
     * Custom inspect object
     */
    [inspect.custom](depth: number, options: Record<string, any>): string;
}
