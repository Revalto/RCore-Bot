/// <reference types="node" />
import { Server as HTTPSServer } from 'https';
import { Server as HTTPServer } from 'http';
import VK from '../../vk';
export default class WebhookTransport {
    started: boolean;
    webhookHandler: Function;
    protected webhookServer: HTTPServer | HTTPSServer | null;
    protected vk: VK;
    constructor(vk: VK);
    /**
     * Starts the webhook server
     */
    start({ path, tls, host, port }?: {
        path?: string;
        tls?: object;
        host?: string;
        port?: number;
    }, next?: Function): Promise<void>;
    /**
     * Stopping gets updates
     */
    stop(): Promise<void>;
    /**
     * Returns webhook callback like http[s] or express
     */
    getWebhookCallback(path?: string | null): Function;
    subscribe(handler: Function): void;
    /**
     * Returns the middleware for the webhook under koa
     */
    getKoaWebhookMiddleware(): Function;
}
